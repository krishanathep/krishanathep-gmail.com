{"version":3,"sources":["firebase.js","App.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","handleUpdate","item_id","title","description","setState","state","items","handleChange","bind","handleSubmit","database","ref","on","snapshot","val","newState","item","push","e","this","target","name","value","preventDefault","updateItem","itemsRef","obj","child","update","itemId","remove","className","align","onSubmit","type","placeholder","onChange","width","map","onClick","removeItem","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAWAA,gBATe,CACXC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,sCACbC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,8CAIIP,QCmIAQ,E,kDA5Ib,aAAe,IAAD,8BACZ,gBAyDFC,aAAe,WAAyD,IAAxDC,EAAuD,uDAA7C,KAAOC,EAAsC,uDAA9B,KAAOC,EAAuB,uDAAT,KAC5D,EAAKC,SAAS,CAAEH,UAASC,QAAOC,iBAzDhC,EAAKE,MAAQ,CACXC,MAAO,GACPL,QAAS,GACTC,MAAO,GACPC,YAAa,IAGf,EAAKI,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAVR,E,gEAaO,IAAD,OACDjB,EAASmB,WAAWC,IAAI,SAChCC,GAAG,SAAS,SAACC,GACpB,IAAIP,EAAQO,EAASC,MACjBC,EAAW,GACf,IAAK,IAAIC,KAAQV,EACfS,EAASE,KAAK,CACZhB,QAASe,EACTd,MAAOI,EAAMU,GAAMd,MACnBC,YAAaG,EAAMU,GAAMb,cAG7B,EAAKC,SAAS,CACZE,MAAOS,S,mCAKAG,GACXC,KAAKf,SAAL,eACGc,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,U,mCAIjBJ,GAGX,GAFAA,EAAEK,iBAEyB,KAAvBJ,KAAKd,MAAMJ,QACb,OAAOkB,KAAKK,aAGd,IAAMC,EAAWlC,EAASmB,WAAWC,IAAI,SACnCK,EAAO,CACXd,MAAOiB,KAAKd,MAAMH,MAClBC,YAAagB,KAAKd,MAAMF,aAG1BsB,EAASR,KAAKD,GACdG,KAAKf,SAAS,CACZH,QAAS,GACTC,MAAO,GACPC,YAAa,O,mCAUf,IAAIuB,EAAM,CAAExB,MAAOiB,KAAKd,MAAMH,MAAOC,YAAagB,KAAKd,MAAMF,aAE5CZ,EAASmB,WAAWC,IAAI,UAEhCgB,MAAMR,KAAKd,MAAMJ,SAAS2B,OAAOF,GAE1CP,KAAKf,SAAS,CACZH,QAAS,GACTC,MAAO,GACPC,YAAa,O,iCAIN0B,GACQtC,EAASmB,WAAWC,IAAI,UAChCgB,MAAME,GAAQC,W,+BAGf,IAAD,OACP,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,YAAYC,MAAM,UAC/B,8CACE,yBAAKD,UAAU,OACb,yBAAKA,UAAU,aACf,0BAAME,SAAUd,KAAKV,cACnB,yBAAKsB,UAAU,cACb,2BACEG,KAAK,OACLH,UAAU,eACVV,KAAK,QACLc,YAAY,iBACZC,SAAUjB,KAAKZ,aACfe,MAAOH,KAAKd,MAAMH,SAGtB,yBAAK6B,UAAU,cACb,2BACEG,KAAK,OACLH,UAAU,eACVV,KAAK,cACLc,YAAY,uBACZC,SAAUjB,KAAKZ,aACfe,MAAOH,KAAKd,MAAMF,eAGtB,4BAAQ+B,KAAK,SAASH,UAAU,6BAAhC,YAGF,yBAAKA,UAAU,aACb,2BAAOA,UAAU,6BACf,4BACE,qCACA,2CACA,wBAAIM,MAAM,OAAV,YAEDlB,KAAKd,MAAMC,MAAMgC,KAAI,SAACtB,GACrB,OACE,4BACE,4BAAKA,EAAKd,OACV,4BAAKc,EAAKb,aACV,4BACE,4BAAQ4B,UAAU,uBAAuBQ,QAAS,kBAAM,EAAKvC,aAAagB,EAAKf,QAASe,EAAKd,MAAOc,EAAKb,eAAzG,UACA,4BAAQ4B,UAAU,iBAAiBQ,QAAS,kBAAM,EAAKC,WAAWxB,EAAKf,WAAvE,wB,GAhIRwC,aCElBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.21f36593.chunk.js","sourcesContent":["import * as firebase from 'firebase'\n\nconst config = {\n    apiKey: \"AIzaSyABHyyHWCMV1OZx40hJZ9oor3W4jLRSJ34\",\n    authDomain: \"v-fire-bbd63.firebaseapp.com\",\n    databaseURL: \"https://v-fire-bbd63.firebaseio.com\",\n    projectId: \"v-fire-bbd63\",\n    storageBucket: \"v-fire-bbd63.appspot.com\",\n    messagingSenderId: \"674916818379\",\n    appId: \"1:674916818379:web:969de3cd17160cbd8faa4e\"\n}\nfirebase.initializeApp(config)\n\nexport default firebase","import React, { Component } from \"react\";\nimport firebase from './firebase'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      item_id: '',\n      title: \"\",\n      description: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const itemsRef = firebase.database().ref('items')\n    itemsRef.on('value', (snapshot) => {\n      let items = snapshot.val()\n      let newState = []\n      for (let item in items) {\n        newState.push({\n          item_id: item,\n          title: items[item].title,\n          description: items[item].description\n        })\n      }\n      this.setState({\n        items: newState\n      })\n    })\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.item_id !== '') {\n      return this.updateItem()\n    }\n\n    const itemsRef = firebase.database().ref('items')\n    const item = {\n      title: this.state.title,\n      description: this.state.description\n    }\n\n    itemsRef.push(item)\n    this.setState({\n      item_id: '',\n      title: '',\n      description: ''\n    })\n  }\n\n  handleUpdate = (item_id = null , title = null , description = null) => {\n    this.setState({ item_id, title, description })\n  }\n\n  updateItem() {\n\n    var obj = { title: this.state.title, description: this.state.description }\n\n    const itemsRef = firebase.database().ref('/items')\n\n    itemsRef.child(this.state.item_id).update(obj)\n\n    this.setState({\n      item_id: '',\n      title: '',\n      description: ''\n    })\n  }\n\n  removeItem(itemId) {\n    const itemsRef = firebase.database().ref('/items')\n    itemsRef.child(itemId).remove()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\" align=\"center\">\n          <h1>Todo Firestore</h1>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n              <form onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"title\"\n                    placeholder=\"Enter Title...\"\n                    onChange={this.handleChange}\n                    value={this.state.title}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"description\"\n                    placeholder=\"Enter Description...\"\n                    onChange={this.handleChange}\n                    value={this.state.description}\n                  />\n                </div>\n                <button type='submit' className=\"btn btn-primary btn-block\">Submit</button>\n                </form>\n              </div>\n              <div className=\"col-md-12\">\n                <table className=\"table table-bordered mt-5\">\n                  <tr>\n                    <th>Title</th>\n                    <th>Description</th>\n                    <th width='20%'>Actions</th>\n                  </tr>\n                  {this.state.items.map((item) => {\n                    return (\n                      <tr>\n                        <td>{item.title}</td>\n                        <td>{item.description}</td>\n                        <td>\n                          <button className='btn btn-success mr-1' onClick={() => this.handleUpdate(item.item_id, item.title, item.description)}>update</button>\n                          <button className='btn btn-danger' onClick={() => this.removeItem(item.item_id)}>remove</button>\n                        </td>\n                      </tr>\n                    )\n                  })}\n                </table>\n              </div>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}